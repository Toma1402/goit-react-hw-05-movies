{"version":3,"file":"static/js/779.cac555d7.chunk.js","mappings":"oRAEaA,EAAaC,EAAAA,GAAAA,GAAH,0HAOVC,EAAcD,EAAAA,GAAAA,GAAH,gD,SCqBxB,EAzBgB,WACd,OAA6BE,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OAPAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACMC,EAAAA,EAAAA,IAAaJ,GADnB,OACVK,EADU,OAEhBN,EAAUM,GAFM,2CAAH,qDAIfF,GACD,GAAE,CAACH,KAEF,SAACN,EAAD,UACGI,EAAQQ,OAAS,EAChBR,EAAQS,KAAI,SAAAC,GAAM,OAChB,2BACE,SAACZ,EAAD,UAAcY,EAAOC,UACrB,uBAAID,EAAOH,YAFJG,EAAOC,OADA,KAOlB,gEAIP,C,kMC3BDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,mCAAsCC,IAD5B,cAC3BE,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAmB,mCAAG,WAAMC,GAAN,uFACdP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAiCN,EAAjC,oBADc,cAC3BO,EAD2B,yBAE1BA,EAAKJ,MAFqB,2CAAH,sDAKnBK,EAAS,mCAAG,WAAMF,GAAN,uFACJP,EAAAA,EAAAA,IAAA,gBACRO,EADQ,4BACcN,EADd,oBADI,cACjBO,EADiB,yBAIhBA,EAAKJ,KAAKM,MAJM,2CAAH,sDAOThB,EAAY,mCAAG,WAAMa,GAAN,uFACPP,EAAAA,EAAAA,IAAA,gBACRO,EADQ,4BACcN,EADd,2BADO,cACpBO,EADoB,yBAInBA,EAAKJ,KAAKC,SAJS,2CAAH,sDAOZM,EAAmB,mCAAG,WAAMC,GAAN,uFACdZ,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACuCW,EADvC,yBADc,cAC3BJ,EAD2B,yBAI1BA,EAAKJ,KAAKC,SAJgB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","helpers/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  padding: 10px;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\nexport const ReviewTitle = styled.h4`\n  margin-bottom: 10px;\n`;\n","import { fetchReviews } from 'helpers/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { ReviewList, ReviewTitle } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReview] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const getReview = async () => {\n      const content = await fetchReviews(movieId);\n      setReview(content);\n    };\n    getReview();\n  }, [movieId]);\n  return (\n    <ReviewList>\n      {reviews.length > 0 ? (\n        reviews.map(review => (\n          <li key={review.author}>\n            <ReviewTitle>{review.author}</ReviewTitle>\n            <p>{review.content}</p>\n          </li>\n        ))\n      ) : (\n        <p>There is no reviews about this film</p>\n      )}\n    </ReviewList>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a34ad8d88567ad499afdd0c300d9d1af';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchTrendMovieById = async id => {\n  const resp = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return resp.data;\n};\n\nexport const fetchCast = async id => {\n  const resp = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const resp = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return resp.data.results;\n};\n\nexport const fetchSearchedMovies = async searchQuery => {\n  const resp = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&include_adult=false`\n  );\n  return resp.data.results;\n};\n"],"names":["ReviewList","styled","ReviewTitle","useState","reviews","setReview","movieId","useParams","useEffect","getReview","fetchReviews","content","length","map","review","author","axios","API_KEY","fetchTrendingMovies","response","data","results","fetchTrendMovieById","id","resp","fetchCast","cast","fetchSearchedMovies","searchQuery"],"sourceRoot":""}