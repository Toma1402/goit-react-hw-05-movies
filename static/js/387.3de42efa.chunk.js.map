{"version":3,"file":"static/js/387.3de42efa.chunk.js","mappings":"gTAEaA,EAAWC,EAAAA,GAAAA,GAAH,mHAORC,EAAWD,EAAAA,GAAAA,GAAH,yCAGRE,EAAYF,EAAAA,GAAAA,IAAH,yCAGTG,EAAgBH,EAAAA,GAAAA,IAAH,2DAIbI,EAAYJ,EAAAA,GAAAA,EAAH,6CAGTK,EAAaL,EAAAA,GAAAA,IAAH,0D,SCoCvB,EA5Ca,WACX,OAAgCM,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEMC,EAAAA,EAAAA,GAAUJ,GAFhB,OAEVK,EAFU,OAGhBN,EAAYM,GAHI,gDAKhBC,QAAQC,IAAR,MALgB,yDAAH,qDAQjBJ,GACD,GAAE,CAACH,KAEF,SAACV,EAAD,UACGQ,EAASU,OAAS,EACjBV,EAASW,KAAI,SAAAC,GAAM,OACjB,UAAClB,EAAD,YACE,SAACI,EAAD,WACE,SAACH,EAAD,CACEkB,IACED,EAAOE,aACHC,EAAAA,EAAaH,EAAOE,aADxB,UAEOE,GAETC,IAAKL,EAAOM,UAGhB,UAACtB,EAAD,YACE,wBAAKgB,EAAOM,QACZ,UAACrB,EAAD,yBACce,EAAOO,UAAYP,EAAOO,UAAY,kBAdzCP,EAAOQ,QADL,KAqBnB,mEAIP,C,kMCvDDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,mCAAsCC,IAD5B,cAC3BE,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAmB,mCAAG,WAAMC,GAAN,uFACdP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAiCN,EAAjC,oBADc,cAC3BO,EAD2B,yBAE1BA,EAAKJ,MAFqB,2CAAH,sDAKnBnB,EAAS,mCAAG,WAAMsB,GAAN,uFACJP,EAAAA,EAAAA,IAAA,gBACRO,EADQ,4BACcN,EADd,oBADI,cACjBO,EADiB,yBAIhBA,EAAKJ,KAAKK,MAJM,2CAAH,sDAOTC,EAAY,mCAAG,WAAMH,GAAN,uFACPP,EAAAA,EAAAA,IAAA,gBACRO,EADQ,4BACcN,EADd,2BADO,cACpBO,EADoB,yBAInBA,EAAKJ,KAAKC,SAJS,2CAAH,sDAOZM,EAAmB,mCAAG,WAAMC,GAAN,uFACdZ,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACuCW,EADvC,yBADc,cAC3BJ,EAD2B,yBAI1BA,EAAKJ,KAAKC,SAJgB,2CAAH,qD,uDC7BzB,IAAMX,EAAa,iC","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","helpers/API.js","helpers/baseUrl.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  margin-top: 15px;\n  padding: 10px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 35px;\n`;\nexport const CastItem = styled.li`\n  width: 200px;\n`;\nexport const CastImage = styled.img`\n  height: 100%;\n`;\nexport const CastActorInfo = styled.div`\n  width: 190px;\n  padding: 10px;\n`;\nexport const Character = styled.p`\n  margin-top: 10px;\n`;\nexport const ImageThumb = styled.div`\n  width: 100%;\n  height: 300px;\n`;\n","import { fetchCast } from 'helpers/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { baseImgUrl } from 'helpers/baseUrl';\nimport noAvatar from 'images/no-avatar.png';\nimport {\n  CastImage,\n  CastItem,\n  CastList,\n  CastActorInfo,\n  Character,\n  ImageThumb,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [castInfo, setCastInfo] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCastInfo = async () => {\n      try {\n        const arrCast = await fetchCast(movieId);\n        setCastInfo(arrCast);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getCastInfo();\n  }, [movieId]);\n  return (\n    <CastList>\n      {castInfo.length > 0 ? (\n        castInfo.map(person => (\n          <CastItem key={person.cast_id}>\n            <ImageThumb>\n              <CastImage\n                src={\n                  person.profile_path\n                    ? baseImgUrl + person.profile_path\n                    : `${noAvatar}`\n                }\n                alt={person.name}\n              />\n            </ImageThumb>\n            <CastActorInfo>\n              <h4>{person.name}</h4>\n              <Character>\n                Character: {person.character ? person.character : 'unknown'}\n              </Character>\n            </CastActorInfo>\n          </CastItem>\n        ))\n      ) : (\n        <p>There is no information about the cast</p>\n      )}\n    </CastList>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a34ad8d88567ad499afdd0c300d9d1af';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchTrendMovieById = async id => {\n  const resp = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return resp.data;\n};\n\nexport const fetchCast = async id => {\n  const resp = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const resp = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return resp.data.results;\n};\n\nexport const fetchSearchedMovies = async searchQuery => {\n  const resp = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&include_adult=false`\n  );\n  return resp.data.results;\n};\n","export const baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n"],"names":["CastList","styled","CastItem","CastImage","CastActorInfo","Character","ImageThumb","useState","castInfo","setCastInfo","movieId","useParams","useEffect","getCastInfo","fetchCast","arrCast","console","log","length","map","person","src","profile_path","baseImgUrl","noAvatar","alt","name","character","cast_id","axios","API_KEY","fetchTrendingMovies","response","data","results","fetchTrendMovieById","id","resp","cast","fetchReviews","fetchSearchedMovies","searchQuery"],"sourceRoot":""}